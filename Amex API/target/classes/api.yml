openapi: 3.0.3
info:
  title: Student Management
  description: "Simple Api"
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
tags:
  - name: student
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: http://swagger.io

paths:
  /student:
    get:
      tags:
        - student
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: getStudent
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '422':
          description: Validation exception
    put:
      tags:
        - student
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '422':
          description: Validation exception

    post:
      tags:
        - student
      summary: Add a new pet to the store
      description: Add a new pet to the store
      operationId: addPet
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

        '400':
          description: Invalid input
        '422':
          description: Validation exception

components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
